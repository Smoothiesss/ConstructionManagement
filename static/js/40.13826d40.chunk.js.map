{"version":3,"sources":["component/hopDong/form/FormUpdate.js","component/hopDong/form/FormDetail.js","component/hopDong/HopDongListView.js"],"names":["Option","Select","layout","labelCol","span","FormUpdate","props","onFinish","data","state","dataPost","form","getFieldsValue","create","Axios","post","AppUtil","GLOBAL_API_PATH","API_HOP_DONG_CREATE","then","res","success","ToastSuccess","loadData","ToastError","_","get","result","catch","finally","id","API_HOP_DONG_UPDATE","dataMac","this","setFieldsValue","macId","nextProps","setState","resetFields","map","item","value","macCode","ref","c","name","initialValues","Item","label","type","placeholder","onChange","onChangeMac","allowClear","Component","FormDetail","dataSet","Object","assign","disabled","HopDongListView","handleOk","e","visible","handleCancel","handleOkEdit","formUpdate","visibleEdit","handleCancelEdit","handleOkCreate","visibleCreate","handleCancelCreate","onGridReady","params","gridApi","api","sizeColumnsToFit","me","rowData","columnDefs","headerName","valueGetter","width","field","minWidth","suppressSizeToFit","cellRendererFramework","style","display","alignItems","onClick","openFormDetail","height","marginRight","className","openFormEdit","onDelete","rowSelect","API_MAC_DETAIL","console","log","onConfirmDelete","showConfirm","API_HOP_DONG_DELETE","store","dispatch","onDeleteConfirm","showLoadingOverlay","API_HOP_DONG_DETAIL","hideOverlay","window","innerHeight","flexDirection","paddingTop","boxShadow","marginTop","justifyContent","marginBottom","color","openFormCreate","enableColResize","enableFilter","enableSorting","onFilterModified","a","onFilterChanged","title","onOk","onCancel","footer","key","size","connect","root"],"mappings":"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","file":"static/js/40.13826d40.chunk.js","sourcesContent":["import { Form, Input, InputNumber, Select } from 'antd';\nimport Axios from 'axios';\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { API_HOP_DONG_CREATE, API_HOP_DONG_UPDATE } from \"../../../constants/ApiConstant\";\nimport AppUtil from \"../../../utils/AppUtil\";\nconst { Option } = Select;\n\nconst layout = {\n    labelCol: { span: 6 },\n};\n\nclass FormUpdate extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: props.data,\n            create: props.create,\n            dataMac: _.get(props, 'dataMac')\n        }\n    }\n\n    componentDidMount() {\n        this.form.setFieldsValue({\n            macId: _.get(this.state.data, 'mac.id')\n        })\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(!nextProps.create){\n            this.form.setFieldsValue({\n                macId: _.get(nextProps.data, 'mac.id')\n            })\n        }\n        if (nextProps.data !== this.state.data && !nextProps.create) {\n            this.setState({\n                data: nextProps.data\n            })\n            this.form.setFieldsValue(\n                nextProps.data\n            );           \n        }\n        if (nextProps.create) {\n            this.form.resetFields();\n        }\n    }\n\n    onFinish = () => {\n        const { data } = this.state\n        const dataPost = this.form.getFieldsValue()\n        if (this.props.create) {\n            Axios.post(AppUtil.GLOBAL_API_PATH + API_HOP_DONG_CREATE, dataPost)\n                .then(res => {\n                    const { data } = res;\n                    if (data.success) {\n                        AppUtil.ToastSuccess('Tạo mới dữ liệu thành công!');\n                        this.props.loadData && this.props.loadData()\n                    } else {\n                        AppUtil.ToastError(_.get(data.result, 'SerialNumber.errors[0].errorMessage'));\n                    }\n                })\n                .catch(() => {\n                    AppUtil.ToastError();\n                })\n                .finally(() => {\n\n                });\n        } else {\n            dataPost.id = data.id\n\n            Axios.post(AppUtil.GLOBAL_API_PATH + API_HOP_DONG_UPDATE, dataPost)\n                .then(res => {\n                    const { data } = res;\n                    if (data.success) {\n                        AppUtil.ToastSuccess('Cập nhật dữ liệu thành công!');\n                        this.props.loadData && this.props.loadData()\n                    }\n                })\n                .catch(() => {\n                    AppUtil.ToastError();\n                })\n                .finally(() => {\n\n                });\n        }\n\n    };\n\n    renderOptionsMac() {\n        const { dataMac } = this.state\n        _.map(dataMac, item => {\n            return <Option value={item.id} >\n                {item.macCode}\n            </Option>\n        })\n    }\n\n    onChangeMac() {\n\n    }\n\n    render() {\n        const { data, create, dataMac } = this.state;\n        return (\n            <Form ref={c => this.form = c} {...layout} name=\"basic\" onFinish={this.onFinish}\n                initialValues={create ? \"\" : data}>\n                <Form.Item name=\"tenHopDong\" label=\"Tên hợp đồng\">\n                    <Input type={\"text\"} />\n                </Form.Item>\n                <Form.Item name=\"chuDauTu\" label=\"Chủ đầu tư\">\n                    <Input type={\"text\"} />\n                </Form.Item>\n                <Form.Item name=\"nhaThau\" label=\"Nhà thầu\">\n                    <Input />\n                </Form.Item>\n                <Form.Item name=\"nhaCungCapBeTong\" label=\"Nhà cung cấp bê tông\">\n                    <Input />\n                </Form.Item>\n                <Form.Item name=\"macId\" label=\"Loại bê tông\">\n                    <Select\n                        placeholder=\"Chọn loại bê tông\"\n                        onChange={() => this.onChangeMac()}\n                        allowClear\n                    >\n                        {_.map(dataMac, item => {\n                            return <Option value={item.id} >\n                                {item.macCode}\n                            </Option>\n                        })}\n                    </Select>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nexport default FormUpdate;\n","import { Form, Input, Select } from 'antd';\nimport React, { Component } from 'react';\nimport _ from 'lodash'\nconst layout = {\n  labelCol: { span: 5 },\n};\n\nconst { Option } = Select;\n\nclass FormDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: props.data\n    }\n  }\n\n  componentDidMount() {\n    this.form.setFieldsValue({\n      macCode: _.get(this.state.data, 'mac.macCode')\n    })\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.data !== this.state.data) {\n      const dataSet =Object.assign(nextProps.data, { macCode: _.get(nextProps.data, 'mac.macCode')})      \n      this.setState({\n        data: nextProps.data\n      })\n      this.form.setFieldsValue(\n        dataSet\n      );     \n    }\n  }\n\n  render() {\n    const { data } = this.state\n    return (\n      <Form ref={c => this.form = c} {...layout} name=\"basic\" initialValues={this.state.data}>\n        <Form.Item name=\"tenHopDong\" label=\"Tên hợp đồng\">\n          <Input type={\"text\"} disabled={true} />\n        </Form.Item>\n        <Form.Item name=\"chuDauTu\" label=\"Chủ đầu tư\">\n          <Input type={\"text\"} disabled={true} />\n        </Form.Item>\n        <Form.Item name=\"nhaThau\" label=\"Nhà thầu\">\n          <Input disabled={true} />\n        </Form.Item>\n        <Form.Item name=\"nhaCungCapBeTong\" label=\"Nhà cung cấp bê tông\">\n          <Input disabled={true} />\n        </Form.Item>\n        <Form.Item name=\"macCode\" label=\"Loại bê tông\">\n          <Input disabled={true} />\n        </Form.Item>\n\n      </Form>\n    );\n  }\n}\n\nexport default FormDetail;\n","import { CButton } from '@coreui/react';\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Button, Modal } from 'antd';\nimport Axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { onDeleteConfirm } from '../../application/actions/appAction';\nimport store from '../../AppStore';\nimport { API_HOP_DONG_DELETE, API_HOP_DONG_DETAIL, API_MAC_DETAIL } from '../../constants/ApiConstant';\nimport AppUtil from '../../utils/AppUtil';\nimport FormUpdate from './form/FormUpdate';\nimport FormDetail from \"./form/FormDetail\";\n\nconst mapStateToProps = (state) => {\n  return {\n    onDelete: state.root.onDelete\n  };\n};\n\nclass HopDongListView extends Component {\n  constructor(props) {\n    super(props);\n    const me = this\n    this.state = {\n      rowData: [],\n      columnDefs: [\n        {\n          headerName: \"STT\",\n          valueGetter: \"node.rowIndex + 1\",\n          width: 80\n        },\n        {\n          headerName: \"Tên hợp đồng\",\n          field: \"tenHopDong\",\n          minWidth: 120,\n          suppressSizeToFit: true\n        },\n        {\n          headerName: \"Chủ đầu tư\",\n          field: \"chuDauTu\",\n          minWidth: 150,\n          suppressSizeToFit: true\n        },\n        {\n          headerName: \"Nhà thầu\",\n          field: \"nhaThau\",\n          minWidth: 120\n        },\n        {\n          headerName: \"Nhà cung cấp bê tông\",\n          field: \"nhaCungCapBeTong\",\n          minWidth: 120,\n        },\n        {\n          headerName: \"Loại bê tông\",\n          field: \"mac.macCode\",\n          minWidth: 120,\n        },\n        {\n          headerName: \"Hành động\",\n          field: \"action\",\n          minWidth: 250,\n          cellRendererFramework: function (params) {\n            return <div style={{ display: 'flex', alignItems: 'center' }}>\n              <button onClick={() => me.openFormDetail(params.data)}\n                style={{ height: 30, marginRight: 5, display: 'flex', alignItems: 'center' }} type=\"button\"\n                className=\"btn btn-info\">Chi tiết\n              </button>\n              <button onClick={() => me.openFormEdit(params.data)}\n                style={{ height: 30, marginRight: 5, display: 'flex', alignItems: 'center' }} type=\"button\"\n                className=\"btn btn-success\">Chỉnh sửa\n              </button>\n              <button onClick={() => me.onDelete(params.data)}\n                style={{ height: 30, display: 'flex', alignItems: 'center' }} type=\"button\"\n                className=\"btn btn-danger\">Xóa\n              </button>\n            </div>\n          }\n        },\n      ],\n      visible: false,\n      visibleEdit: false,\n      onDelete: false,\n      rowSelect: {},\n      visibleCreate: false,\n      dataMac: []\n    }\n    this.gridApi = ''\n  }\n\n  componentDidMount(){\n    Axios.get(AppUtil.GLOBAL_API_PATH + API_MAC_DETAIL)\n        .then(res => {\n        console.log(\"HopDongListView -> componentDidMount -> res\", res)\n          const {data} = res;\n          if (data.success) {\n            this.setState({\n              dataMac: data.result\n            })\n          }\n        })\n        .catch(() => {\n          AppUtil.ToastError();\n        })\n        .finally(() => {\n        });\n  }\n\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.onDelete !== this.state.onDelete) {\n      if (nextProps.onDelete === true) {\n        this.onConfirmDelete(this.state.rowSelect)\n      }\n    }\n  }\n\n  //detail\n  openFormDetail(data) {\n    this.setState({\n      visible: true,\n      rowSelect: data,\n    });\n  }\n\n  handleOk = e => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  handleCancel = e => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  //edit\n  openFormEdit(data) {\n    this.setState({\n      visibleEdit: true,\n      rowSelect: data,\n    });\n  }\n\n\n  handleOkEdit = e => {\n    this.formUpdate.onFinish()\n    this.setState({\n      visibleEdit: false,\n    });\n  };\n\n  handleCancelEdit = e => {\n    this.setState({\n      visibleEdit: false,\n    });\n  };\n\n  //create\n  openFormCreate() {\n    this.setState({\n      visibleCreate: true,\n    });\n  }\n\n  handleOkCreate = e => {\n    this.formUpdate.onFinish()\n    this.setState({\n      visibleCreate: false,\n    });\n  };\n\n  handleCancelCreate = e => {\n    this.setState({\n      visibleCreate: false,\n    });\n  };\n\n\n  onDelete(data) {\n    AppUtil.showConfirm()\n    this.setState({\n      rowSelect: data\n    })\n  }\n\n  onConfirmDelete(data) {\n    const params = {}\n    params['id'] = data.id\n    Axios.post(AppUtil.GLOBAL_API_PATH + API_HOP_DONG_DELETE, null, {\n      params\n    })\n      .then(res => {\n        const { data } = res;\n        if (data.success) {\n          AppUtil.ToastSuccess('Xóa dữ liệu thành công!');\n          this.loadData()\n        }\n      })\n      .catch(() => {\n        AppUtil.ToastError();\n      })\n      .finally(() => {\n        store.dispatch(onDeleteConfirm(false))\n      });\n  }\n\n\n  loadData() {\n    this.gridApi && this.gridApi.showLoadingOverlay();\n    Axios.get(AppUtil.GLOBAL_API_PATH + API_HOP_DONG_DETAIL)\n      .then(res => {\n        const { data } = res;\n        if (data.success) {\n          this.setState({\n            rowData: data.result \n          })\n        }\n      })\n      .catch(() => {\n        AppUtil.ToastError();\n      })\n      .finally(() => {\n        this.gridApi && this.gridApi.hideOverlay();\n      });\n  }\n\n  onGridReady = params => {\n    this.gridApi = params.api;\n    this.gridApi.sizeColumnsToFit();\n    this.loadData()\n  };\n\n  render() {\n    return (\n      <div className=\"ag-theme-alpine\" style={{\n        height: window.innerHeight - 180,\n        alignItems: \"stretch\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        paddingTop: 0, boxShadow: 'unset',\n        marginTop: -15\n      }}>\n        <div style={{ display: 'flex', justifyContent: 'flex-end', marginBottom: 5 }}>\n          <CButton color=\"primary\" onClick={() => this.openFormCreate()}>+ Tạo mới</CButton>\n        </div>\n        <AgGridReact\n          columnDefs={this.state.columnDefs}\n          enableColResize={true}\n          rowData={this.state.rowData}\n          enableFilter={true}\n          enableSorting={true}\n          onFilterModified={(...a) => console.log(\"onFilterModified\", ...a)}\n          onFilterChanged={(...a) => console.log(\"onFilterChanged\", ...a)}\n          onGridReady={this.onGridReady}\n        />\n        <Modal\n          title=\"Chi tiết\"\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          width={'50%'}\n          footer={[\n            <Button key=\"back\" size=\"large\" type=\"danger\" onClick={this.handleCancel}>Đóng</Button>,\n          ]}\n        >\n          <FormDetail data={this.state.rowSelect} />\n        </Modal>\n        <Modal\n          title=\"Chỉnh sửa\"\n          visible={this.state.visibleEdit}\n          onOk={this.handleOkEdit}\n          onCancel={this.handleCancelEdit}\n          width={'50%'}\n          footer={[\n            <Button key=\"submit\" type=\"primary\" size=\"large\" onClick={this.handleOkEdit}>\n              Submit\n            </Button>,\n            <Button key=\"back\" size=\"large\" type=\"danger\" onClick={this.handleCancelEdit}>Đóng</Button>,\n\n          ]}\n        >\n          <FormUpdate ref={c => this.formUpdate = c} data={this.state.rowSelect}  dataMac={this.state.dataMac} loadData={() => this.loadData()} />\n        </Modal>\n        <Modal\n          title=\"Tạo mới\"\n          visible={this.state.visibleCreate}\n          onOk={this.handleOkCreate}\n          onCancel={this.handleCancelCreate}\n          width={'50%'}\n          footer={[\n            <Button key=\"submit\" type=\"primary\" size=\"large\" onClick={this.handleOkCreate}>\n              Submit\n            </Button>,\n            <Button key=\"back\" size=\"large\" type=\"danger\" onClick={this.handleCancelCreate}>Đóng</Button>,\n\n          ]}\n        >\n          <FormUpdate create ref={c => this.formUpdate = c} data={this.state.rowSelect} dataMac={this.state.dataMac}\n            loadData={() => this.loadData()} />\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(HopDongListView);\n"],"sourceRoot":""}