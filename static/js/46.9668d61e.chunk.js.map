{"version":3,"sources":["component/vehicle/form/FormDetail.js","component/vehicle/form/FormUpdate.js","component/vehicle/view/ViewVehicle.js"],"names":["layout","labelCol","span","TextArea","Input","FormDetail","props","state","data","nextProps","this","setState","form","setFieldsValue","ref","c","name","initialValues","Item","label","disabled","Component","FormUpdate","onFinish","dataPost","getFieldsValue","create","Axios","post","AppUtil","GLOBAL_API_PATH","API_VEHICLE_CREATE","then","res","success","ToastSuccess","loadData","ToastError","_","get","result","catch","finally","id","API_VEHICLE_UPDATE","serialNumber","description","ViewVehicle","handleOk","e","visible","handleCancel","handleOkEdit","formUpdate","visibleEdit","handleCancelEdit","handleOkCreate","visibleCreate","handleCancelCreate","onGridReady","params","gridApi","api","sizeColumnsToFit","me","rowData","columnDefs","headerName","valueGetter","width","field","minWidth","suppressSizeToFit","minwidth","cellRendererFramework","style","display","alignItems","onClick","openFormDetail","height","marginRight","type","className","openFormEdit","onDelete","rowSelect","overlayLoadingTemplate","onConfirmDelete","console","log","showConfirm","API_VEHICLE_DELETE","store","dispatch","onDeleteConfirm","showLoadingOverlay","API_VEHICLE_DETAIL","hideOverlay","window","innerHeight","flexDirection","paddingTop","boxShadow","marginTop","justifyContent","marginBottom","color","openFormCreate","enableColResize","enableFilter","enableSorting","onFilterModified","a","onFilterChanged","title","onOk","onCancel","footer","key","size","connect","root"],"mappings":"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","file":"static/js/46.9668d61e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Input, Button, Select } from 'antd';\nconst layout = {\n    labelCol: { span: 6 },\n    // wrapperCol: { span: 16 },\n};\nconst { TextArea } = Input;\n\nclass FormDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: props.data\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.data !== this.state.data) {\n            this.setState({\n                data: nextProps.data\n            })\n            this.form.setFieldsValue(\n                nextProps.data\n            );\n        }\n    }\n\n    render() {\n        return (\n            <Form ref={c => this.form = c} {...layout} name=\"basic\" initialValues={this.state.data}>\n                <Form.Item name=\"name\" label=\"Tên phương tiện\" >\n                    <Input disabled />\n                </Form.Item>\n                <Form.Item name=\"serialNumber\" label=\"Biển số\" >\n                    <Input disabled />\n                </Form.Item>\n                <Form.Item name=\"description\" label=\"Mô tả\" >\n                    <TextArea disabled />\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nexport default FormDetail;","import { Form, Input } from 'antd';\nimport React, { Component } from 'react';\nimport { API_VEHICLE_UPDATE, API_VEHICLE_CREATE } from '../../../constants/ApiConstant';\nimport Axios from 'axios';\nimport AppUtil from '../../../utils/AppUtil';\nimport _ from 'lodash'\nconst layout = {\n    labelCol: { span: 6 },\n};\nconst { TextArea } = Input;\n\nclass FormUpdate extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: props.data,\n            create: props.create\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.data !== this.state.data && !nextProps.create) {\n            this.setState({\n                data: nextProps.data\n            })\n            this.form.setFieldsValue(\n                nextProps.data\n            );\n        }\n        if (nextProps.create) {\n            this.form.setFieldsValue(\n                {\n                    name: '',\n                    serialNumber: '',\n                    description: ''\n                }\n            );\n        }\n    }\n\n    onFinish = () => {\n        const { data } = this.state\n        const dataPost = this.form.getFieldsValue()\n        if (this.props.create) {\n            Axios.post(AppUtil.GLOBAL_API_PATH + API_VEHICLE_CREATE, dataPost)\n                .then(res => {\n                    const { data } = res;\n                    if (data.success) {\n                        AppUtil.ToastSuccess('Tạo mới dữ liệu thành công!');\n                        this.props.loadData && this.props.loadData()\n                    }\n                    else {\n                        AppUtil.ToastError(_.get(data.result, 'SerialNumber.errors[0].errorMessage'));\n                    }\n                })\n                .catch(() => {\n                    AppUtil.ToastError();\n                })\n                .finally(() => {\n\n                });\n        } else {\n            dataPost.id = data.id\n            Axios.post(AppUtil.GLOBAL_API_PATH + API_VEHICLE_UPDATE, dataPost)\n                .then(res => {\n                    const { data } = res;\n                    if (data.success) {\n                        AppUtil.ToastSuccess('Cập nhật dữ liệu thành công!');\n                        this.props.loadData && this.props.loadData()\n                    }\n                })\n                .catch(() => {\n                    AppUtil.ToastError();\n                })\n                .finally(() => {\n\n                });\n        }\n\n    };\n\n    render() {\n        const { data, create } = this.state\n        return (\n            <Form ref={c => this.form = c} {...layout} name=\"basic\" onFinish={this.onFinish} initialValues={create ? \"\" : data}>\n              <Form.Item name=\"name\" label=\"Tên phương tiện\" >\n                <Input />\n              </Form.Item>\n              <Form.Item name=\"serialNumber\" label=\"Biển số\" >\n                <Input />\n              </Form.Item>\n              <Form.Item name=\"description\" label=\"Mô tả\" >\n                <TextArea />\n              </Form.Item>\n            </Form>\n        );\n    }\n}\n\nexport default FormUpdate;\n","import { CButton } from '@coreui/react';\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Button, Modal } from 'antd';\nimport Axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { onDeleteConfirm } from '../../../application/actions/appAction';\nimport store from '../../../AppStore';\nimport { API_VEHICLE_DELETE, API_VEHICLE_DETAIL } from '../../../constants/ApiConstant';\nimport AppUtil from '../../../utils/AppUtil';\nimport FormDetail from '../form/FormDetail';\nimport FormUpdate from '../form/FormUpdate';\nconst mapStateToProps = (state) => {\n    return {\n        onDelete: state.root.onDelete\n    };\n};\nclass ViewVehicle extends Component {\n    constructor(props) {\n        super(props);\n        const me = this\n        this.state = {\n            rowData: [],\n            columnDefs: [\n                {\n                    headerName: \"STT\",\n                    valueGetter: \"node.rowIndex + 1\",\n                    width: 80\n                },\n                {\n                    headerName: \"Tên phương tiện\",\n                    field: \"name\",\n                    minWidth: 300,\n                    suppressSizeToFit: true\n                },\n                {\n                    headerName: \"Biển số\",\n                    field: \"serialNumber\",\n                    width: 100\n                },\n                {\n                    headerName: \"Mô tả\",\n                    field: \"description\",\n                    minWidth: 300,\n                },\n                {\n                    headerName: \"Hành động\",\n                    field: \"action\",\n                    minwidth: 200,\n                    cellRendererFramework: function (params) {\n                        return <div style={{ display: 'flex', alignItems: 'center' }}>\n                            <button onClick={() => me.openFormDetail(params.data)} style={{ height: 30, marginRight: 5, display: 'flex', alignItems: 'center' }} type=\"button\" className=\"btn btn-info\">Chi tiết</button>\n                            <button onClick={() => me.openFormEdit(params.data)} style={{ height: 30, marginRight: 5, display: 'flex', alignItems: 'center' }} type=\"button\" className=\"btn btn-success\">Chỉnh sửa</button>\n                            <button onClick={() => me.onDelete(params.data)} style={{ height: 30, display: 'flex', alignItems: 'center' }} type=\"button\" className=\"btn btn-danger\">Xóa</button>\n                        </div>\n                    }\n                },\n            ],\n            visible: false,\n            visibleEdit: false,\n            onDelete: false,\n            rowSelect: {},\n            visibleCreate: false,\n            overlayLoadingTemplate:\n                '<span class=\"ag-overlay-loading-center\">Please wait while your rows are loading</span>'\n        }\n        this.gridApi = ''\n    }\n\n\n\n    // componentDidMount() {\n    //     this.loadData()\n    // }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.onDelete != this.state.onDelete) {\n            if (nextProps.onDelete == true) {\n                this.onConfirmDelete(this.state.rowSelect)\n            }\n        }\n    }\n    //detail\n    openFormDetail(data) {\n        console.log(data)\n        this.setState({\n            visible: true,\n            rowSelect: data,\n        });\n    }\n\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n    //edit\n    openFormEdit(data) {\n        this.setState({\n            visibleEdit: true,\n            rowSelect: data,\n        });\n    }\n\n\n    handleOkEdit = e => {\n        this.formUpdate.onFinish()\n        this.setState({\n            visibleEdit: false,\n        });\n    };\n\n    handleCancelEdit = e => {\n        this.setState({\n            visibleEdit: false,\n        });\n    };\n    //create\n    openFormCreate() {\n        this.setState({\n            visibleCreate: true,\n        });\n    }\n\n    handleOkCreate = e => {\n        this.formUpdate.onFinish()\n        this.setState({\n            visibleCreate: false,\n        });\n    };\n\n    handleCancelCreate = e => {\n        this.setState({\n            visibleCreate: false,\n        });\n    };\n\n\n\n\n\n\n    onDelete(data) {\n        AppUtil.showConfirm()\n        this.setState({\n            rowSelect: data\n        })\n    }\n\n    onConfirmDelete(data) {\n        const params = {}\n        params['vehicleId'] = data.id\n        Axios.post(AppUtil.GLOBAL_API_PATH + API_VEHICLE_DELETE, null, {\n            params\n        })\n            .then(res => {\n                const { data } = res;\n                if (data.success) {\n                    AppUtil.ToastSuccess('Xóa dữ liệu thành công!');\n                    this.loadData()\n                }\n            })\n            .catch(() => {\n                AppUtil.ToastError();\n            })\n            .finally(() => {\n                store.dispatch(onDeleteConfirm(false))\n            });\n    }\n\n\n\n    loadData() {\n        this.gridApi && this.gridApi.showLoadingOverlay();\n        Axios.get(AppUtil.GLOBAL_API_PATH + API_VEHICLE_DETAIL)\n            .then(res => {\n                const { data } = res;\n                if (data.success) {\n                    this.setState({\n                        rowData: data.result,\n                    })\n                }\n            })\n            .catch(() => {\n                AppUtil.ToastError();\n            })\n            .finally(() => {\n                this.gridApi && this.gridApi.hideOverlay();\n            });\n    }\n\n    onGridReady = params => {\n        this.gridApi = params.api;\n        this.gridApi.sizeColumnsToFit();\n        this.loadData()\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"ag-theme-alpine\" style={{\n                height: window.innerHeight - 180,\n                alignItems: \"stretch\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                paddingTop: 0, boxShadow: 'unset',\n                marginTop: -15\n            }}>\n                <div style={{ display: 'flex', justifyContent: 'flex-end', marginBottom: 5 }}>\n                    <CButton color=\"primary\" onClick={() => this.openFormCreate()}>+ Tạo mới</CButton>\n                </div>\n                <AgGridReact\n                    columnDefs={this.state.columnDefs}\n                    enableColResize={true}\n                    rowData={this.state.rowData}\n                    enableFilter={true}\n                    enableSorting={true}\n                    onFilterModified={(...a) => console.log(\"onFilterModified\", ...a)}\n                    onFilterChanged={(...a) => console.log(\"onFilterChanged\", ...a)}\n                    onGridReady={this.onGridReady}\n                    overlayLoadingTemplate={this.state.overlayLoadingTemplate}\n                />\n                <Modal\n                    title=\"Chi tiết\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    footer={[\n                        <Button key=\"back\" size=\"large\" type=\"danger\" onClick={this.handleCancel}>Đóng</Button>,\n                    ]}\n                >\n                    <FormDetail data={this.state.rowSelect} />\n                </Modal>\n                <Modal\n                    title=\"Chỉnh sửa\"\n                    visible={this.state.visibleEdit}\n                    onOk={this.handleOkEdit}\n                    onCancel={this.handleCancelEdit}\n                    footer={[\n                        <Button key=\"submit\" type=\"primary\" size=\"large\" onClick={this.handleOkEdit}>\n                            Submit\n                        </Button>,\n                        <Button key=\"back\" size=\"large\" type=\"danger\" onClick={this.handleCancelEdit}>Đóng</Button>,\n\n                    ]}\n                >\n                    <FormUpdate ref={c => this.formUpdate = c} data={this.state.rowSelect} loadData={() => this.loadData()} />\n                </Modal>\n                <Modal\n                    title=\"Tạo mới\"\n                    visible={this.state.visibleCreate}\n                    onOk={this.handleOkCreate}\n                    onCancel={this.handleCancelCreate}\n                    footer={[\n                        <Button key=\"submit\" type=\"primary\" size=\"large\" onClick={this.handleOkCreate}>\n                            Submit\n                        </Button>,\n                        <Button key=\"back\" size=\"large\" type=\"danger\" onClick={this.handleCancelCreate}>Đóng</Button>,\n\n                    ]}\n                >\n                    <FormUpdate create ref={c => this.formUpdate = c} data={this.state.rowSelect} loadData={() => this.loadData()} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(ViewVehicle);\n"],"sourceRoot":""}