{"version":3,"sources":["component/dashboard/LineChartGroup.js","component/dashboard/DashBoardItem.js","component/dashboard/Dashboard.js","views/pages/Loading.js"],"names":["LineChartGroup","this","props","dataKeyMap","maxValue","minValue","dataColorMap","unit","dataMaxMin","labelTooltip","minWidth","data","length","margin","top","right","left","bottom","strokeDasharray","axisLine","tickLine","dataKey","content","payload","label","className","style","fontSize","boxShadow","width","map","entry","index","key","backgroundColor","color","value","paddingLeft","dangerouslySetInnerHTML","__html","name","display","alignItems","justifyContent","flexWrap","marginRight","height","borderRadius","background","e","indexe","includes","type","stroke","dot","PureComponent","DashBoardItem","state","flag","setState","onDownload","subTitle","title","dom","domBody","document","getElementById","DomToImage","toPng","quality","bgcolor","then","dataUrl","link","createElement","href","_subTitle","replace","download","click","URL","revokeObjectURL","catch","error","console","finally","onDownloaded","Loading","headerColor","exportIconColor","id","borderBottom","borderBottomColor","onClick","exportDom","zIndex","Component","defaultProps","RangePicker","DatePicker","layout","labelCol","span","wrapperCol","Dashboard","exportExcel","window","open","AppUtil","GLOBAL_API_PATH","API_EXPORT_EXCEL","results","loading","year","moment","startDate","format","add","endDate","typeFilter","fromDate","toDate","timekeys","endOf","currentDate","startOf","obj","end","start","push","requestMac","Axios","get","API_MAC_DETAIL","requestHopDong","API_HOP_DONG_DETAIL","requestSaiSo","API_SAI_SO","all","spread","res","responseMac","responseHopDong","responseSaiSo","dataMac","result","dataHopDong","dataSaiSo","loadData","ToastError","val","loadingComponent","onLoading","dataPost","macCode","hopDongId","post","API_SAI_SO_FILTER","success","onStop","padding","Item","flex","marginBottom","placeholder","allowClear","onChange","onChangeFilterType","defaultValue","Option","onChangeDate","onChangeMac","_","item","onChangeHopDong","tenHopDong","tile","size","dataChart","log","dataChartTong","dataChartM3","dataGroupBy","getRangeDate","groupBy","x","thongTinMeTron","getRangeDateMonth","forEach","timekey","Object","keys","month","da","catSong","xiMang","troBay","nuoc","phuGia1","phuGia2","da_1m3","catSong_1m3","xiMang_1m3","phuGia1_1m3","phuGia2_1m3","dta","toFixed","_obj","maxData","minData","ref","component","Container","paddingRight","c","renderFilter","element","i","marginTop","range","ticks","LoadingComponent","divElement","position","React"],"mappings":"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","file":"static/js/15.84ebed55.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  ReferenceLine,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis\n} from 'recharts';\nimport './style/chart.scss';\n\nclass LineChartGroup extends PureComponent {\n  render() {\n    const { maxValue, minValue, dataKeyMap, dataColorMap, dataMaxMin, unit, labelTooltip = \"\", minWidth = 250 } = this.props;\n    return (\n      <ResponsiveContainer>\n        {this.props.data.length > 0 ? (\n          <LineChart data={this.props.data}\n            margin={{ top: 5, right: 35, left: -20, bottom: 6 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis\n              axisLine={false}\n              tickLine={false}\n              dataKey=\"name\"\n            />\n            <YAxis\n              axisLine={false}\n              tickLine={false}\n               />\n            <Tooltip content={(props) => {\n              const { payload, label } = props;\n              return (\n                <div className=\"hover-style-stack\" style={{ fontSize: '13px', boxShadow: ` 2px 2px 8px 0 rgba(0, 0, 0, 0.4)  `, width: minWidth }}>\n                  <div className=\"stack-title\">{labelTooltip} {label}</div>\n                  {\n                    payload.map((entry, index) => {\n                      if (dataKeyMap[entry.dataKey]) {\n                        return (\n                          // <div key={`item-${index}`}\n                          //   style={{ display: 'flex', alignItems: 'center' }}\n                          // >\n                          //   <div style={{\n                          //     height: 10,\n                          //     width: 20,\n                          //     background: entry.color,\n                          //     marginRight: 5\n                          //   }} />\n                          //   {dataKeyMap[entry.dataKey]}: {entry.value}</div>\n                          <div key={index} className=\"detail-style-stack\">\n                            <span className=\"dot-detail\" style={{ backgroundColor: entry.color }}></span>\n                            <span className=\"detail-title\">\n                              {dataKeyMap[entry.dataKey]}\n                            </span>\n                            <span className=\"detail-value\">\n                              {entry.value ? entry.value : \"0\"}\n\n                              {/* {entry.value && entry.value.formatNumber() + ' '} */}\n                              {/* <span style={{ paddingLeft: '5px' }} dangerouslySetInnerHTML={{ __html: unit ? unit : \"\" }}></span> */}\n                              <span style={{ paddingLeft: '5px' }} dangerouslySetInnerHTML={{ __html: entry.payload[entry.name + '_unit'] ? entry.payload[entry.name + '_unit'] : unit ? unit : \"\" }}></span>\n                            </span>\n                          </div>\n\n                        )\n\n                      }\n                      return null;\n                    }\n                    )\n                  }\n                </div>\n              )\n            }} />\n            <Legend\n              content={(props) => {\n                const { payload } = props;\n                return (\n                  <div >\n                    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexWrap: 'wrap' }}>\n                      {\n                        payload.map((entry, index) => {\n                          if (dataKeyMap[entry.dataKey]) {\n                            return (<div key={`item-${index}`}\n                              style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginRight: 10 }}\n                            >\n                              <div style={{\n                                height: 10,\n                                width: 10,\n                                borderRadius: 5,\n                                background: entry.color,\n                                marginRight: 5,\n                                fontSize: 10\n                              }} />\n                              <span style={{ fontSize: 12, color: \"#000000\" }}>\n                                {dataKeyMap[entry.dataKey]}\n                              </span>\n                            </div>)\n                          }\n                          return null;\n                        })\n                      }\n                    </div>\n                  </div>\n                )\n              }\n              }\n            />\n            {/* {\n              maxValue ? <ReferenceLine className=\"cls-max-line\" y={parseFloat(maxValue)} label=\"\" strokeDasharray=\"4 2\" stroke=\"#ff7f7d\" /> : null\n            }\n            {\n              minValue ? <ReferenceLine className=\"cls-min-line\" y={parseFloat(minValue)} label=\"\" stroke=\"#ff7f7d\" /> : null\n            } */}\n            {dataColorMap.map((e, indexe) => {\n              if (e.key.includes('Max') || e.key.includes('Min') || e.key.includes('dm_')) {\n                return (<Line type=\"monotone\" key={indexe} dataKey={e.key} stroke={e.color} dot={false} strokeDasharray={'5 5'} />)\n              } else {\n                return (<Line type=\"monotone\" key={indexe} dataKey={e.key} stroke={e.color} />)\n              }\n            })}\n          </LineChart>)\n          : <div></div>}\n      </ResponsiveContainer>\n    );\n  }\n}\n\nexport default LineChartGroup;\n","import React, { Component } from 'react';\nimport LineChartGroup from './LineChartGroup';\nimport DomToImage from 'dom-to-image';\nimport \"./style/boxchart.scss\";\nimport Loading from '../../views/pages/Loading';\nimport CIcon from '@coreui/icons-react';\n\nclass DashBoardItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            flag: false\n        }\n    }\n    exportDom() {\n        this.setState({ flag: true })\n        this.props.onDownload && this.props.onDownload()\n        const { title, subTitle, dom } = this.props;\n        let titlee = title ? title : \"\"\n        const domBody = document.getElementById(dom);\n        DomToImage.toPng(domBody, { quality: 1, bgcolor: 'white' })\n            .then(function (dataUrl) {\n                const link = document.createElement(\"a\");\n                link.href = dataUrl;\n                const _subTitle = subTitle.replace(\"/\", \"\").replace(\"/\", \"\")\n                link.download = _subTitle.replace(/span|sub|<|>/gi, \"\")\n                link.click();\n                URL.revokeObjectURL(dataUrl);\n            })\n            .catch(function (error) {\n                console.error('oops, something went wrong!', error);\n            }).finally(() => {\n                this.props.onDownloaded && this.props.onDownloaded()\n            });\n    }\n    loading() {\n        if (this.state.flag) {\n            return (\n                <Loading />\n            )\n        }\n    }\n    render() {\n        const { subTitle, dom, headerColor, exportIconColor } = this.props;\n        return (\n            <div className='export-chart' style={{ height: \"100%\" }} >\n                <div className=\"box-chart\" id={dom}>\n                    <div className=\"content-box-chart\" style={{ backgroundColor: headerColor || \"#eee\", borderBottom: \"2px solid\", borderBottomColor: exportIconColor || \"#ccc\" }} >\n                        <div className=\"title-box-chart\">\n                            <div className=\"sub-title\" dangerouslySetInnerHTML={{ __html: subTitle }} ></div>\n                        </div>\n                        <button title=\"Xuất biểu đồ\" type=\"button\"\n                            style={{ backgroundColor: exportIconColor || \"#ccc\" }}\n                            className=\"btn btn-export button-export\"\n                            onClick={() => this.exportDom()}>\n                            <CIcon style={{zIndex:10, color: '#fff', fontSize: 12}} name=\"cilDataTransferDown\" />\n                        </button>\n                        \n                    </div>\n                    <LineChartGroup {...this.props} />\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default DashBoardItem;\n\nDashBoardItem.defaultProps = {\n    background: '#0093d9'\n}\n\n","import { DatePicker, Form, Select } from 'antd';\nimport Axios from 'axios';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport React, { Component } from 'react';\nimport { API_SAI_SO, API_MAC_DETAIL, API_HOP_DONG_DETAIL, API_SAI_SO_FILTER, API_EXPORT_EXCEL } from '../../constants/ApiConstant';\nimport AppUtil from '../../utils/AppUtil';\nimport Loading from '../../views/pages/Loading';\nimport DashBoardItem from './DashBoardItem';\nimport CIcon from '@coreui/icons-react';\nimport { Button, Modal } from 'antd';\n\n\nconst { RangePicker } = DatePicker;\n\nconst dateFormat = 'DD/MM/YYYY';\n\nconst layout = {\n    labelCol: {\n        span: 6,\n    },\n    wrapperCol: {\n        span: 16,\n    },\n};\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [\n                {\n                    subTitle: 'Tổng chênh lệch (Tấn)',\n                    results: [\n\n                    ],\n                    dataKeyMap: {\n                        'da': 'Đá',\n                        'catSong': 'Cát Sông',\n                        'xiMang': 'Xi măng',\n                        'troBay': 'Tro bay',\n                        'nuoc': 'Nước',\n                        'phuGia1': 'Phụ gia 1',\n                        'phuGia2': 'Phụ gia 2'\n                    },\n                    dataColorMap: [\n                        { key: \"da\", color: \"#264653\", name: 'da' },\n                        { key: \"catSong\", color: \"#2a9d8f\", name: 'catSong' },\n                        { key: \"xiMang\", color: \"#e9c46a\", name: 'xiMang' },\n                        { key: \"troBay\", color: \"#f4a261\", name: 'troBay' },\n                        { key: \"nuoc\", color: \"blue\", name: 'nuoc' },\n                        { key: \"phuGia1\", color: \"#e76f51\", name: 'phuGia1' },\n                        { key: \"phuGia2\", color: \"#a8dadc\", name: 'phuGia2' },\n\n\n                    ],\n                    unit: 'Tấn'\n                },\n                {\n                    subTitle: 'Tổng chênh lệch (Mét khối)',\n                    results: [\n\n                    ],\n                    dataKeyMap: {\n                        'da_1m3': 'Đá',\n                        'catSong_1m3': 'Cát',\n                        'xiMang_1m3': 'Xi măng',\n                        'phuGia1_1m3': 'Phụ gia 1',\n                        'phuGia2_1m3': 'Phụ gia 2',\n                    },\n                    dataColorMap: [\n                        { key: \"da_1m3\", color: \"#264653\", name: 'da_1m3' },\n                        { key: \"catSong_1m3\", color: \"#2a9d8f\", name: 'catSong_1m3' },\n                        { key: \"xiMang_1m3\", color: \"#e9c46a\", name: 'xiMang_1m3' },\n                        { key: \"phuGia1_1m3\", color: \"#e76f51\", name: 'phuGia1' },\n                        { key: \"phuGia2_1m3\", color: \"#a8dadc\", name: 'phuGia2' },\n                    ],\n                    unit: 'm3'\n                }\n\n            ],\n            loading: true,\n            year: moment().year(),\n            startDate: moment(moment().format('DD/MM/YYYY'), 'DD/MM/YYYY').add(-1, 'Y').format('DD/MM/YYYY'),\n            endDate: moment().format('DD/MM/YYYY'),\n            typeFilter: 1\n        }\n        this.labelTooltip = \"Chênh lệch\"\n\n\n\n    }\n\n    getRangeDateMonth(fromDate, toDate) {\n        const timekeys = [];\n        const endDate = moment(toDate, 'DD/MM/YYYY').endOf('month');\n        let currentDate = moment(fromDate, 'DD/MM/YYYY').startOf('month');\n        while (currentDate <= endDate) {\n            const obj = {\n                label: currentDate.format('MM/YYYY'),\n                end: currentDate.endOf('month').format('DD/MM/YYYY'),\n                start: currentDate.startOf('month').format('DD/MM/YYYY')\n            }\n            timekeys.push(obj);\n            currentDate.add(1, 'M');\n        }\n        return timekeys;\n    }\n\n    getRangeDate(fromDate, toDate) {\n        const timekeys = [];\n        const endDate = moment(toDate, 'DD/MM/YYYY');\n        let currentDate = moment(fromDate, 'DD/MM/DYYYY');\n        while (currentDate <= endDate) {\n            const obj = {\n                label: currentDate.format('DD/MM/YYYY'),\n                // end: currentDate.endOf('days').format('DD/MM/YYYY'),\n                // start: currentDate.startOf('days').format('DD/MM/YYYY')\n            }\n            timekeys.push(obj);\n            currentDate.add(1, 'd');\n        }\n        return timekeys;\n    }\n\n    componentDidMount() {\n        const requestMac = Axios.get(AppUtil.GLOBAL_API_PATH + API_MAC_DETAIL);\n        const requestHopDong = Axios.get(AppUtil.GLOBAL_API_PATH + API_HOP_DONG_DETAIL);\n        const requestSaiSo = Axios.get(AppUtil.GLOBAL_API_PATH + API_SAI_SO);\n        Axios.all([requestMac, requestHopDong, requestSaiSo])\n            .then(Axios.spread((...res) => {\n\n                const responseMac = res[0];\n                const responseHopDong = res[1];\n                const responseSaiSo = res[2];\n\n                if (res) {\n                    // console.log(\"ThongTinMeTronListView -> componentDidMount -> data\", data)\n                    this.setState({\n                        dataMac: responseMac.data.result,\n                        dataHopDong: responseHopDong.data.result,\n                        dataSaiSo: responseSaiSo.data.result\n                    })\n                    this.loadData(responseSaiSo.data.result, this.state.startDate, this.state.endDate, this.state.typeFilter)\n                }\n\n            }))\n            .catch(() => {\n                AppUtil.ToastError();\n            })\n            .finally(() => {\n            });\n\n\n    }\n\n    onChangeMac(val) {\n        this.loadingComponent && this.loadingComponent.onLoading()\n\n        const dataPost = {\n            startDate: this.state.startDate ? moment(this.state.startDate, 'DD/MM/YYYY').format('DD/MM/YYYY') : '',\n            endDate: this.state.endDate ? moment(this.state.endDate, 'DD/MM/YYYY').format('DD/MM/YYYY') : '',\n            macCode: val ? val : '',\n            hopDongId: this.state.hopDongId ? this.state.hopDongId : ''\n        }\n        Axios.post(AppUtil.GLOBAL_API_PATH + API_SAI_SO_FILTER, dataPost)\n            .then(res => {\n                const { data } = res;\n                if (data.success) {\n                    this.loadData(data.result, this.state.startDate, this.state.endDate, this.state.typeFilter)\n\n                    this.setState({\n                        macCode: val\n                    })\n                } else {\n                }\n            })\n            .catch(() => {\n                AppUtil.ToastError();\n            })\n            .finally(() => {\n                this.loadingComponent && this.loadingComponent.onStop()\n\n            });\n    }\n    onChangeHopDong(val) {\n        this.loadingComponent && this.loadingComponent.onLoading()\n\n        const dataPost = {\n            startDate: this.state.startDate ? moment(this.state.startDate, 'DD/MM/YYYY').format('DD/MM/YYYY') : '',\n            endDate: this.state.endDate ? moment(this.state.endDate, 'DD/MM/YYYY').format('DD/MM/YYYY') : '',\n            macCode: this.state.macCode ? this.state.macCode : '',\n            hopDongId: val ? val : ''\n        }\n        Axios.post(AppUtil.GLOBAL_API_PATH + API_SAI_SO_FILTER, dataPost)\n            .then(res => {\n                const { data } = res;\n                if (data.success) {\n                    this.loadData(data.result, this.state.startDate, this.state.endDate, this.state.typeFilter)\n\n                    this.setState({\n                        hopDongId: val\n                    })\n                } else {\n                    AppUtil.ToastError();\n\n                }\n            })\n            .catch(() => {\n                AppUtil.ToastError();\n            })\n            .finally(() => {\n                this.loadingComponent && this.loadingComponent.onStop()\n\n            });\n    }\n\n    onChangeDate(val) {\n        this.loadingComponent && this.loadingComponent.onLoading()\n        const dataPost = {\n            startDate: val[0] ? val[0].format('DD/MM/YYYY').format('DD/MM/YYYY') : '',\n            endDate: val[1] ? val[1].format('DD/MM/YYYY').format('DD/MM/YYYY') : '',\n            macCode: this.state.macCode ? this.state.macCode : '',\n            hopDongId: this.state.hopDongId ? this.state.hopDongId : ''\n        }\n        Axios.post(AppUtil.GLOBAL_API_PATH + API_SAI_SO_FILTER, dataPost)\n            .then(res => {\n                const { data } = res;\n                if (data.success) {\n                    this.loadData(data.result, moment(val[0]).format('DD/MM/YYYY'), moment(val[1]).format('DD/MM/YYYY'), this.state.typeFilter)\n\n                    this.setState({\n                        startDate: moment(val[0]).format('DD/MM/YYYY'),\n                        endDate: moment(val[1]).format('DD/MM/YYYY')\n                    })\n                } else {\n                    AppUtil.ToastError();\n                }\n            })\n            .catch(() => {\n                AppUtil.ToastError();\n            })\n            .finally(() => {\n                this.loadingComponent && this.loadingComponent.onStop()\n\n            });\n    }\n\n    onChangeFilterType(val) {\n        this.loadingComponent && this.loadingComponent.onLoading()\n        const dataPost = {\n            startDate: this.state.startDate ? moment(this.state.startDate, 'DD/MM/YYYY').format('DD/MM/YYYY') : '',\n            endDate: this.state.endDate ? moment(this.state.endDate, 'DD/MM/YYYY').format('DD/MM/YYYY') : '',\n            macCode: this.state.macCode ? this.state.macCode : '',\n            hopDongId: this.state.hopDongId ? this.state.hopDongId : ''\n        }\n        Axios.post(AppUtil.GLOBAL_API_PATH + API_SAI_SO_FILTER, dataPost)\n            .then(res => {\n                const { data } = res;\n                if (data.success) {\n                    this.loadData(data.result, this.state.startDate, this.state.endDate, val)\n                    this.setState({\n                        typeFilter: val\n                    })\n                } else {\n                    AppUtil.ToastError();\n\n                }\n            })\n            .catch(() => {\n                AppUtil.ToastError();\n            })\n            .finally(() => {\n\n                this.loadingComponent && this.loadingComponent.onStop()\n\n            });\n    }\n\n\n    renderFilter() {\n        const { dataMac, dataHopDong } = this.state\n        return <Form  {...layout}\n            name=\"basic\"\n            style={{ display: 'flex', background: '#fff', alignItems: 'center', borderRadius: 5, padding: 5, height: 60 }}\n\n        >\n            <Form.Item\n                label=\"Loại\"\n                name=\"type\"\n                style={{ flex: 1, marginBottom: 0 }}\n\n            >\n                <Select\n                    placeholder=\"Chọn\"\n                    // onChange={onGenderChange}\n                    allowClear={false}\n                    onChange={(val) => this.onChangeFilterType(val)}\n                    defaultValue={1}\n\n                >\n                    <Select.Option value={1}>Theo tháng</Select.Option>\n                    <Select.Option value={2}>Theo ngày</Select.Option>\n                </Select>\n            </Form.Item>\n            <Form.Item\n                label=\"Từ ngày\"\n                name=\"startDate\"\n\n                style={{ flex: 1, marginBottom: 0 }}\n            >\n                <RangePicker\n                    defaultValue={[moment(this.state.startDate, dateFormat), moment(this.state.endDate, dateFormat)]}\n                    format={dateFormat}\n                    onChange={(val) => this.onChangeDate(val)}\n\n                />\n            </Form.Item>\n\n            <Form.Item\n                label=\"MAC\"\n                name=\"macCode\"\n                style={{ flex: 1, marginBottom: 0 }}\n\n            >\n                <Select\n                    placeholder=\"Chọn\"\n                    // onChange={onGenderChange}\n                    allowClear\n                    onChange={(val) => this.onChangeMac(val)}\n\n                >\n                    {_.map(dataMac, item => {\n                        return <Select.Option value={item.id} >\n                            {item.macCode}\n                        </Select.Option>\n                    })}\n                </Select>\n            </Form.Item>\n            <Form.Item\n                label=\"Hợp đồng\"\n                name=\"hopDongId\"\n                style={{ flex: 1, marginBottom: 0 }}\n\n            >\n                <Select\n                    placeholder=\"Chọn\"\n                    // onChange={onGenderChange}\n                    allowClear\n                    onChange={(val) => this.onChangeHopDong(val)}\n\n                >\n                    {_.map(dataHopDong, item => {\n                        return <Select.Option value={item.id} >\n                            {item.tenHopDong}\n                        </Select.Option>\n                    })}\n                </Select>\n            </Form.Item>\n            <Form.Item\n                // label={'Export excel'}\n                name=\"export\"\n                style={{marginBottom: 0 }}\n\n            >\n                <Button tile='Export excel' style={{height: 32, marginBottom: 10}} key=\"submit\" type=\"primary\" size=\"large\" onClick={this.exportExcel}>\n                    <CIcon style={{ zIndex: 10, color: '#fff', fontSize: 12 }} name=\"cilDataTransferDown\" />\n                </Button>\n            </Form.Item>\n        </Form>\n    }\n\n    exportExcel = () => {\n        window.open(AppUtil.GLOBAL_API_PATH + API_EXPORT_EXCEL)\n        // Axios.get(AppUtil.GLOBAL_API_PATH + API_EXPORT_EXCEL)\n        //     .then(res => {\n        //         const { data } = res;\n        //         // if (data.success) {\n        //         //     AppUtil.ToastSuccess('Xuất excel thành công');\n        //         // } else {\n        //         //     AppUtil.ToastError();\n\n        //         // }\n        //     })\n        //     .catch(() => {\n        //         // AppUtil.ToastError();\n        //     })\n        //     .finally(() => {\n\n\n        //     });\n    }\n\n\n\n    loadData(dataChart, startDate, endDate, typeFilter) {\n        console.log('load data', startDate, endDate)\n        const { data } = this.state;\n        const dataChartTong = []\n        const dataChartM3 = []\n        // if (year = moment().year) {\n        //     endDate = moment().format('DD/MM/YYYY')\n        //     startDate = moment(year, 'DD/MM/YYYY').add(-1, 'Y').format('DD/MM/YYYY');\n        // }\n\n        let dataGroupBy = []\n\n        let timekeys = []\n        if (typeFilter == 2) {\n            timekeys = this.getRangeDate(startDate, endDate);\n            dataGroupBy = _.groupBy(dataChart, x => {\n                return moment(_.get(x.thongTinMeTron, 'ngayTron')).format('DD/MM/YYYY')\n            })\n        } else {\n            timekeys = this.getRangeDateMonth(startDate, endDate);\n            dataGroupBy = _.groupBy(dataChart, x => {\n                return moment(_.get(x.thongTinMeTron, 'ngayTron')).format('MM/YYYY')\n            })\n        }\n        console.log(dataGroupBy, timekeys, startDate, endDate)\n\n        _.forEach(timekeys, timekey => {\n            Object.keys(dataGroupBy).forEach(month => {\n                if (month == timekey.label) {\n                    let da = 0\n                    let catSong = 0\n                    let xiMang = 0\n                    let troBay = 0\n                    let nuoc = 0\n                    let phuGia1 = 0\n                    let phuGia2 = 0\n                    let da_1m3 = 0\n                    let catSong_1m3 = 0\n                    let xiMang_1m3 = 0\n                    let phuGia1_1m3 = 0\n                    let phuGia2_1m3 = 0\n                    _.forEach(dataGroupBy[month], dta => {\n                        da = da + dta.da\n                        catSong = catSong + dta.catSong\n                        xiMang = xiMang + dta.xiMang\n                        troBay += dta.troBay\n                        nuoc += dta.nuoc\n                        phuGia1 += dta.phuGia1\n                        phuGia2 += dta.phuGia2\n                        da_1m3 += dta.da_1m3\n                        catSong_1m3 += dta.catSong_1m3\n                        xiMang_1m3 += dta.xiMang_1m3\n                        phuGia1_1m3 += dta.phuGia1_1m3\n                        phuGia2_1m3 += dta.phuGia2_1m3\n                    })\n                    const obj = {\n                        name: month,\n                        da: da.toFixed(2),\n                        catSong: catSong.toFixed(2),\n                        xiMang: xiMang.toFixed(2),\n                        troBay: troBay.toFixed(2),\n                        nuoc: nuoc.toFixed(2),\n                        phuGia1: phuGia1.toFixed(2),\n                        phuGia2: phuGia2.toFixed(2)\n                    }\n                    const _obj = {\n                        name: month,\n                        da_1m3: da_1m3.toFixed(2),\n                        catSong_1m3: catSong_1m3.toFixed(2),\n                        xiMang_1m3: xiMang_1m3.toFixed(2),\n                        phuGia1_1m3: phuGia1_1m3.toFixed(2),\n                        phuGia2_1m3: phuGia2_1m3.toFixed(2),\n                    }\n                    dataChartTong.push(obj)\n                    dataChartM3.push(_obj)\n\n                }\n            })\n\n        })\n        data[0].results = dataChartTong\n        data[1].results = dataChartM3\n        this.setState({\n            data,\n            loading: false\n        })\n    }\n\n\n    onDownload() {\n        this.loadingComponent && this.loadingComponent.onLoading()\n    }\n\n    onDownloaded() {\n        this.loadingComponent && this.loadingComponent.onStop()\n    }\n    render() {\n        const { loading, data, maxData, minData } = this.state;\n        if (loading) {\n            return <Loading />\n        }\n        return (\n            <div ref={component => this.Container = component} className={\"container-haohut-lpg\"} style={{ paddingLeft: 15, paddingRight: 15, height: \"100%\" }}>\n                <LoadingComponent ref={c => { this.loadingComponent = c }} />\n                {this.renderFilter()}\n                {_.map(data, (element, i) => {\n                    return (\n                        <div key={i} style={{\n                            width: '100%',\n                            height: 350,\n                            marginTop: 10\n                        }} >\n                            <DashBoardItem\n                                title={this.title}\n                                onDownload={() => this.onDownload(element.subTitle)}\n                                onDownloaded={() => this.onDownloaded()}\n                                dom={`image-dom${i}`}\n                                headerColor={i % 3 === 0 ? \"#D6F4B1\" : i % 3 === 1 ? \"#FDF2D5\" : \"#FFD7DA\"}\n                                exportIconColor={i % 3 === 0 ? \"#298C39\" : i % 3 === 1 ? \"#FEC32A\" : \"#FB3042\"}\n                                dataKeyMap={data[i].dataKeyMap ? data[i].dataKeyMap : this.dataKeyMap}\n                                dataColorMap={data[i].dataColorMap ? data[i].dataColorMap : this.dataColorMap}\n                                subTitle={element.subTitle}\n                                data={element.results}\n                                range={[minData, maxData]}\n                                ticks={[minData, maxData]}\n                                unit={element.unit}\n                                labelTooltip={this.labelTooltip}\n                            />\n                        </div>\n                    )\n                })}\n            </div>\n\n        )\n    }\n}\n\nexport default Dashboard;\n\nclass LoadingComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    onLoading() {\n        this.divElement && (this.divElement.style.display = \"flex\")\n    }\n\n    onStop() {\n        this.divElement && (this.divElement.style.display = \"none\")\n    }\n\n    render() {\n        return (\n            <div ref={c => { this.divElement = c }} className=\"loading-component\" style={{ zIndex: 99, display: \"none\", position: \"absolute\", top: 0, bottom: 0, left: 0, right: 0, backgroundColor: \"#00000085\", justifyContent: \"center\", alignItems: \"center\" }}>\n                <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './Loading.scss';\n\nclass Loading extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"loading\" style={{ '--n': '5' }}>\n        <div className=\"dot\" style={{ '--i': '0' }} />\n        <div className=\"dot\" style={{ '--i': '1' }} />\n        <div className=\"dot\" style={{ '--i': '2' }} />\n        <div className=\"dot\" style={{ '--i': '3' }} />\n        <div className=\"dot\" style={{ '--i': '4' }} />\n      </div>\n    );\n  }\n}\n\nexport default Loading;"],"sourceRoot":""}