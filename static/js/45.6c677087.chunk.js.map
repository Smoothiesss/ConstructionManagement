{"version":3,"sources":["component/user/form/FormUpdate.js","component/user/form/FormDetail.js","component/user/UserListView.js"],"names":["layout","labelCol","span","FormUpdate","Input","TextArea","props","onFinish","data","state","dataPost","form","getFieldsValue","create","Axios","post","AppUtil","GLOBAL_API_PATH","API_USER_CREATE","then","res","success","ToastSuccess","loadData","ToastError","_","get","result","catch","finally","id","API_USER_UPDATE","nextProps","this","setState","setFieldsValue","userName","email","fullName","ref","c","name","initialValues","Item","label","Component","FormDetail","disabled","UserListView","handleOk","e","visible","handleCancel","handleOkEdit","formUpdate","visibleEdit","handleCancelEdit","handleOkCreate","visibleCreate","handleCancelCreate","onGridReady","params","gridApi","api","sizeColumnsToFit","me","rowData","columnDefs","headerName","valueGetter","width","field","minWidth","suppressSizeToFit","cellRendererFramework","style","display","alignItems","onClick","openFormDetail","height","marginRight","type","className","openFormEdit","onDelete","rowSelect","onConfirmDelete","console","log","showConfirm","API_USER_DELETE","store","dispatch","onDeleteConfirm","showLoadingOverlay","API_USER_DETAIL","hideOverlay","window","innerHeight","flexDirection","paddingTop","boxShadow","marginTop","justifyContent","marginBottom","color","openFormCreate","enableColResize","enableFilter","enableSorting","onFilterModified","a","onFilterChanged","title","onOk","onCancel","footer","key","size","connect","root"],"mappings":"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","file":"static/js/45.6c677087.chunk.js","sourcesContent":["import { Form, Input, InputNumber } from 'antd';\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport _ from 'lodash'\nimport {API_USER_CREATE, API_USER_UPDATE } from \"../../../constants/ApiConstant\";\nimport AppUtil from \"../../../utils/AppUtil\";\n\nconst layout = {\n  labelCol: { span: 6 },\n};\nconst { TextArea } = Input;\n\nclass FormUpdate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: props.data,\n      create: props.create\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.data !== this.state.data && !nextProps.create) {\n      this.setState({\n        data: nextProps.data\n      })\n      this.form.setFieldsValue(\n        nextProps.data\n      );\n    }\n    if (nextProps.create) {\n      this.form.setFieldsValue(\n        {\n          userName: null,\n          email: null,\n          fullName: null,\n        }\n      );\n    }\n  }\n\n  onFinish = () => {\n    const { data } = this.state\n    const dataPost = this.form.getFieldsValue()\n    if (this.props.create) {\n      Axios.post(AppUtil.GLOBAL_API_PATH + API_USER_CREATE, dataPost)\n        .then(res => {\n          const { data } = res;\n          if (data.success) {\n            AppUtil.ToastSuccess('Tạo mới dữ liệu thành công!');\n            this.props.loadData && this.props.loadData()\n          } else {\n            AppUtil.ToastError(_.get(data.result, 'SerialNumber.errors[0].errorMessage'));\n          }\n        })\n        .catch(() => {\n          AppUtil.ToastError();\n        })\n        .finally(() => {\n\n        });\n    } else {\n      dataPost.id = data.id\n      Axios.post(AppUtil.GLOBAL_API_PATH + API_USER_UPDATE, dataPost)\n        .then(res => {\n          const { data } = res;\n          if (data.success) {\n            AppUtil.ToastSuccess('Cập nhật dữ liệu thành công!');\n            this.props.loadData && this.props.loadData()\n          }\n        })\n        .catch(() => {\n          AppUtil.ToastError();\n        })\n        .finally(() => {\n\n        });\n    }\n\n  };\n\n  render() {\n    const { data, create } = this.state;\n    return (\n      <Form ref={c => this.form = c} {...layout} name=\"basic\" onFinish={this.onFinish}\n        initialValues={create ? \"\" : data}>\n        <Form.Item name=\"userName\" label=\"UserName\">\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"email\" label=\"Email\">\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"fullName\" label=\"Full Name\">\n          <Input />\n        </Form.Item>\n        \n      </Form>\n    );\n  }\n}\n\nexport default FormUpdate;\n","import React, { Component } from 'react';\nimport {Form, Input, Button, Select, InputNumber} from 'antd';\nconst layout = {\n    labelCol: { span: 6 },\n    // wrapperCol: { span: 16 },\n};\nconst { TextArea } = Input;\n\nclass FormDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: props.data\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.data !== this.state.data) {\n            this.setState({\n                data: nextProps.data\n            })\n            this.form.setFieldsValue(\n                nextProps.data\n            );\n        }\n    }\n\n    render() {\n        return (\n            <Form ref={c => this.form = c} {...layout} name=\"basic\" initialValues={this.state.data}>\n              <Form.Item name=\"userName\" label=\"UserName\">\n                <Input disabled={true}/>\n              </Form.Item>\n              <Form.Item name=\"email\" label=\"Email\">\n                <Input disabled/>\n              </Form.Item>\n              <Form.Item name=\"fullName\" label=\"Full Name\">\n                <Input disabled/>\n              </Form.Item>\n            </Form>\n        );\n    }\n}\n\nexport default FormDetail;\n","import { CButton } from '@coreui/react';\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Button, Modal } from 'antd';\nimport Axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { onDeleteConfirm } from '../../application/actions/appAction';\nimport store from '../../AppStore';\nimport { API_USER_DELETE, API_USER_DETAIL} from '../../constants/ApiConstant';\nimport AppUtil from '../../utils/AppUtil';\nimport FormUpdate from './form/FormUpdate';\nimport FormDetail from \"./form/FormDetail\";\nimport moment from 'moment';\nimport _ from 'lodash';\n\n\nconst mapStateToProps = (state) => {\n    return {\n      onDelete: state.root.onDelete\n    };\n  };\n  \n  class UserListView extends Component {\n    constructor(props) {\n      super(props);\n      const me = this\n      this.state = {\n        rowData: [],\n        columnDefs: [\n          {\n            headerName: \"STT\",\n            valueGetter: \"node.rowIndex + 1\",\n            width: 80\n          },\n          {\n            headerName: \"UserName\",\n            field: \"userName\",\n            minWidth: 120,\n            suppressSizeToFit: true\n          },\n          {\n            headerName: \"Email\",\n            field: \"email\",\n            minWidth: 120,\n            suppressSizeToFit: true\n          },\n          {\n            headerName: \"Full Name\",\n            field: \"fullName\",\n            minWidth: 120,\n            suppressSizeToFit: true\n          },\n        //   {\n        //     headerName: \"Concurrency Stamp\",\n        //     field: \"concurrencyStamp\",\n        //     minWidth: 150,\n        //     suppressSizeToFit: true\n        //   },\n          {\n            headerName: \"Hành động\",\n            field: \"action\",\n            minWidth: 250,\n            cellRendererFramework: function (params) {\n              return <div style={{display: 'flex', alignItems: 'center'}}>\n                <button onClick={() => me.openFormDetail(params.data)}\n                        style={{height: 30, marginRight: 5, display: 'flex', alignItems: 'center'}} type=\"button\"\n                        className=\"btn btn-info\">Chi tiết\n                </button>\n                <button onClick={() => me.openFormEdit(params.data)}\n                        style={{height: 30, marginRight: 5, display: 'flex', alignItems: 'center'}} type=\"button\"\n                        className=\"btn btn-success\">Chỉnh sửa\n                </button>\n                <button onClick={() => me.onDelete(params.data)}\n                        style={{height: 30, display: 'flex', alignItems: 'center'}} type=\"button\"\n                        className=\"btn btn-danger\">Xóa\n                </button>\n              </div>\n            }\n          },\n        ],\n        visible: false,\n        visibleEdit: false,\n        onDelete: false,\n        rowSelect: {},\n        visibleCreate: false\n      }\n      this.gridApi = ''\n    }\n  \n    \n  \n    componentWillReceiveProps(nextProps) {\n      if (nextProps.onDelete !== this.state.onDelete) {\n        if (nextProps.onDelete === true) {\n          this.onConfirmDelete(this.state.rowSelect)\n        }\n      }\n    }\n  \n    //detail\n    openFormDetail(data) {\n      console.log(data)\n      this.setState({\n        visible: true,\n        rowSelect: data,\n      });\n    }\n  \n    handleOk = e => {\n      this.setState({\n        visible: false,\n      });\n    };\n  \n    handleCancel = e => {\n      this.setState({\n        visible: false,\n      });\n    };\n  \n    //edit\n    openFormEdit(data) {\n      this.setState({\n        visibleEdit: true,\n        rowSelect: data,\n      });\n    }\n  \n  \n    handleOkEdit = e => {\n      this.formUpdate.onFinish()\n      this.setState({\n        visibleEdit: false,\n      });\n    };\n  \n    handleCancelEdit = e => {\n      this.setState({\n        visibleEdit: false,\n      });\n    };\n  \n    //create\n    openFormCreate() {\n      this.setState({\n        visibleCreate: true,\n      });\n    }\n  \n    handleOkCreate = e => {\n      this.formUpdate.onFinish()\n      this.setState({\n        visibleCreate: false,\n      });\n    };\n  \n    handleCancelCreate = e => {\n      this.setState({\n        visibleCreate: false,\n      });\n    };\n  \n  \n    onDelete(data) {\n      AppUtil.showConfirm()\n      this.setState({\n        rowSelect: data\n      })\n    }\n  \n    onConfirmDelete(data) {\n      const params = {}\n      params['id'] = data.id\n      Axios.post(AppUtil.GLOBAL_API_PATH + API_USER_DELETE, null, {\n        params\n      })\n        .then(res => {\n          const {data} = res;\n          if (data.success) {\n            AppUtil.ToastSuccess('Xóa dữ liệu thành công!');\n            this.loadData()\n          }\n        })\n        .catch(() => {\n          AppUtil.ToastError();\n        })\n        .finally(() => {\n          store.dispatch(onDeleteConfirm(false))\n        });\n    }\n  \n  \n    loadData() {\n      this.gridApi && this.gridApi.showLoadingOverlay();\n      Axios.get(AppUtil.GLOBAL_API_PATH + API_USER_DETAIL)\n        .then(res => {\n          const {data} = res;\n          if (data.success) {\n            this.setState({\n              rowData: data.result\n            })\n          }\n        })\n        .catch(() => {\n          AppUtil.ToastError();\n        })\n        .finally(() => {\n          this.gridApi && this.gridApi.hideOverlay();\n        });\n    }\n  \n    onGridReady = params => {\n      this.gridApi = params.api;\n      this.gridApi.sizeColumnsToFit();\n      this.loadData()\n    };\n  \n    render() {\n      return (\n        <div className=\"ag-theme-alpine\" style={{\n          height: window.innerHeight - 180,\n          alignItems: \"stretch\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          paddingTop: 0, boxShadow: 'unset',\n          marginTop: -15\n        }}>\n          <div style={{display: 'flex', justifyContent: 'flex-end', marginBottom: 5}}>\n            <CButton color=\"primary\" onClick={() => this.openFormCreate()}>+ Tạo mới</CButton>\n          </div>\n          <AgGridReact\n            columnDefs={this.state.columnDefs}\n            enableColResize={true}\n            rowData={this.state.rowData}\n            enableFilter={true}\n            enableSorting={true}\n            onFilterModified={(...a) => console.log(\"onFilterModified\", ...a)}\n            onFilterChanged={(...a) => console.log(\"onFilterChanged\", ...a)}\n            onGridReady={this.onGridReady}\n          />\n          <Modal\n            title=\"Chi tiết\"\n            visible={this.state.visible}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            footer={[\n              <Button key=\"back\" size=\"large\" type=\"danger\" onClick={this.handleCancel}>Đóng</Button>,\n            ]}\n          >\n            <FormDetail data={this.state.rowSelect}/>\n          </Modal>\n          <Modal\n            title=\"Chỉnh sửa\"\n            visible={this.state.visibleEdit}\n            onOk={this.handleOkEdit}\n            onCancel={this.handleCancelEdit}\n            footer={[\n              <Button key=\"submit\" type=\"primary\" size=\"large\" onClick={this.handleOkEdit}>\n                Submit\n              </Button>,\n              <Button key=\"back\" size=\"large\" type=\"danger\" onClick={this.handleCancelEdit}>Đóng</Button>,\n  \n            ]}\n          >\n            <FormUpdate ref={c => this.formUpdate = c} data={this.state.rowSelect} loadData={() => this.loadData()}/>\n          </Modal>\n          <Modal\n            title=\"Tạo mới\"\n            visible={this.state.visibleCreate}\n            onOk={this.handleOkCreate}\n            onCancel={this.handleCancelCreate}\n            footer={[\n              <Button key=\"submit\" type=\"primary\" size=\"large\" onClick={this.handleOkCreate}>\n                Submit\n              </Button>,\n              <Button key=\"back\" size=\"large\" type=\"danger\" onClick={this.handleCancelCreate}>Đóng</Button>,\n  \n            ]}\n          >\n            <FormUpdate create ref={c => this.formUpdate = c} data={this.state.rowSelect}\n                        loadData={() => this.loadData()}/>\n          </Modal>\n        </div>\n      );\n    }\n  }\n  \n  export default connect(mapStateToProps)(UserListView);"],"sourceRoot":""}